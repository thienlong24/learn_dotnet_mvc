@{
    ViewData["Title"] = "Movies - Create";
    ViewData["Message"] = "Create a new movie";
}
<link rel="stylesheet" href="~/css/movies.css" />

<div class="text-center">
    <h1 class="display-4">@ViewData["Message"]</h1>
    <div class="container mt-4">
        <h1 class="text-center mb-4">Add a New Movie</h1>
        <form asp-controller="Movies" asp-action="Create" method="post" class="needs-validation" novalidate>
            <div class="mb-3">
                <label for="Title" class="form-label">Title</label>
                <input type="text" class="form-control" id="Title" name="Title" placeholder="Enter movie title" required style="background-color: #34495e; color: #ecf0f1; border: 1px solid #2c3e50;">
            </div>
            <div class="mb-3">
                <label for="ReleaseDate" class="form-label">Release Date</label>
                <input type="date" class="form-control" id="ReleaseDate" name="ReleaseDate" min="1900-01-01" max="@DateTime.Now.ToString("yyyy-MM-dd")" required style="background-color: #34495e; color: #ecf0f1; border: 1px solid #2c3e50;">
            </div>
            <div class="mb-3">
                <label for="Genre" class="form-label">Genre</label>
                <select id="Genre" name="Genre" class="form-select" multiple required style="background-color: #34495e; color: #ecf0f1; border: 1px solid #2c3e50;">
                    @foreach (var genre in Enum.GetValues(typeof(MvcMovie.Models.MovieGenre)))
                    {
                        <option value="@genre">@genre</option>
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="Price" class="form-label">Price</label>
                <input type="text" class="form-control" id="Price" name="Price" placeholder="Enter movie price" required style="background-color: #34495e; color: #ecf0f1; border: 1px solid #2c3e50;">
            </div>
            <button type="submit" class="btn btn-primary">Create</button>
            <a asp-action="Index" class="btn btn-secondary">Cancel</a>
        </form>
    </div>

    <!-- Toast container -->
    <div id="toast" class="toast"></div>

    <script>
        const form = document.querySelector("form");
        const toast = document.getElementById("toast");

        form.addEventListener("submit", async (event) => {
            event.preventDefault();
            try {
                const response = await fetch(event.target.action, {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/x-www-form-urlencoded"
                    },
                    body: new URLSearchParams(new FormData(event.target)).toString()
                });

                if (response.ok) {
                    const data = await response.json();
                    // Redirect to Movies list with a success message
                    window.location.href = `/Movies?successMessage=Movie created successfully! Id=${data.id}, Title=${data.title}`;
                } else {
                    const errorData = await response.json();
                    showToast(`Failed to create movie: ${errorData.error}`, "error");
                }
            } catch (error) {
                showToast(`Error creating movie: ${error.message}`, "error");
            }
        });

        function showToast(message, type) {
            toast.textContent = message;
            toast.className = `toast ${type}`;
            toast.style.display = "block";

            setTimeout(() => {
                toast.style.display = "none";
            }, 3000); // Hide toast after 3 seconds
        }
    </script>
</div>
